name: photon-cn88
version: 1
inputs:
  vmflavor:
    type: string
    title: Size
    default: small
    enum:
      - tiny
      - small
      - medium
  vmnet:
    type: string
    title: Network
    enum:
      - vmnet1
      - vmnet2
      - vmnet3
    default: vmnet2
  vmnotes:
    type: string
    title: Notes
    default: Deployed by vra.infrajedi.local
  vmuser:
    type: string
    title: Username
    default: henk
  vmpass:
    type: string
    title: Password
    encrypted: true
    default: VMware01!
  vmdnsdomain:
    type: string
    title: DNS Domain
    enum:
      - .infrajedi.local
      - .domain.local
    default: .infrajedi.local
  vmimage:
    type: string
    title: Image
    oneOf:
      - title: Photon4-Rev2
        const: http://192.168.1.10/ISO/Linux/photon-ova_uefi-4.0-c001795b80.ova
      - title: Photon4-Rev1
        const: http://192.168.1.10/ISO/Linux/photon-ova_uefi-4.0-ca7c9e9330.ova
    default: http://192.168.1.10/ISO/Linux/photon-ova_uefi-4.0-c001795b80.ova
  vmcount:
    type: integer
    title: Number of VMs
    minimum: 1
    maximum: 3
    default: 1
  vralease:
    type: string
    title: Lease Policy
    oneOf:
      - title: Short Lease
        const: shortlease
      - title: Medium Lease
        const: mediumlease
      - title: Long Lease
        const: longlease
    default: shortlease
  pgDeploy:
    type: object
    title: Deployment Properties
    $ref: /ref/property-groups/pgDeploy
resources:
  VM:
    type: Cloud.vSphere.Machine
    metadata:
      layoutPosition:
        - 0
        - 0
    properties:
      name: vl${input.pgDeploy.vmEnvironment + input.pgDeploy.vmServertype + input.pgDeploy.vmLocationcode}
      imageRef: ${input.vmimage}
      flavor: ${input.vmflavor}
      count: ${input.vmcount}
      ignoreActiveDirectory: true
      #activeDirectory:
      #  relativeDN: OU=Install,OU=Servers
      #  finalRelativeDN: OU=General,OU=Servers
      vmnotes: ${input.vmnotes}
      remoteAccess:
        authentication: usernamePassword
        username: ${input.vmuser}
        password: ${input.vmpass}
      networks:
        - network: ${resource.Network.id}
          assignment: dynamic
      tags:
        - key: vraserver
          value: vra.infrajedi.local
        - key: ServerType
          value: ${input.pgDeploy.vmServertype}
        - key: vraCloudTemplate
          value: ${env.blueprintName}
        - key: vralease
          value: ${input.vralease}
      cloudConfig: |
        #preserve_hostname: false
        #hostname: ${self.resourceName}
        fqdn: ${self.resourceName+input.vmdnsdomain} 
        ssh_pwauth: yes
        chpasswd:
          list: |
            ${input.vmuser}:${input.vmpass}
          expire: false
        users:
          - default
          - name: ${input.vmuser}
            lock_passwd: false
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: [wheel, sudo, admin]
            shell: '/bin/bash'
          - name: root
            lock_passwd: false
            hashed_passwd: ${secret.PhotonRoot}
        runcmd:
          - echo [DHCPv4] >> /etc/systemd/network/99-dhcp-en.network
          - echo UseDomains=yes >> /etc/systemd/network/99-dhcp-en.network
          - #echo Domains=${input.vmdnsdomain} >> /etc/systemd/network/99-dhcp-en.network
          - systemctl restart systemd-networkd systemd-resolve
  Network:
    type: Cloud.vSphere.Network
    metadata:
      layoutPosition:
        - 1
        - 0
    properties:
      networkType: existing
      constraints:
        - tag: vmnet:${input.vmnet}
